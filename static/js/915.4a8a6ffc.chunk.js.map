{"version":3,"file":"static/js/915.4a8a6ffc.chunk.js","mappings":"8LAGaA,EAAM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACE,SAAC,IAAD,CACMC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,gBAAiB,WACjBC,MAAO,OACP,UAAW,CAAED,gBAAiB,YAC9B,UAAW,CAAEA,gBAAiB,aAVtC,SAaQP,GAGX,C,qHClBYS,EAAa,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,GAAY,YACvD,OACE,SAAC,IAAD,CACET,QAAQ,WACRU,OAAO,SACPC,UAAQ,EACRZ,WAAS,EACTQ,MAAOA,EACPC,KAAMA,EACNI,gBAAiB,CAAEC,MAAO,CAAEC,QAAS,OAAQT,MAAO,YACpDU,YAAU,QACRF,MAAO,CACLC,QAAS,OACTE,YAAa,UACb,mBAAoB,CAClBA,YAAa,aAGdP,IAIV,C,6ICnBYQ,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,UAACC,EAAA,EAAD,CAAKC,UAAU,OAAOC,SAhBL,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACTC,EAAO,CACXrB,KAAMmB,EAAKG,SAAStB,KAAKuB,MACzBC,MAAOL,EAAKG,SAASE,MAAMD,MAC3BE,SAAUN,EAAKG,SAASG,SAASF,OAGnCb,GAASgB,EAAAA,EAAAA,IAASL,IAClBF,EAAKQ,OACN,EAIiDC,aAAa,MAA3D,WACE,SAAC9B,EAAA,EAAD,CAAYC,MAAM,WAAWC,KAAK,UAClC,SAACF,EAAA,EAAD,CAAYC,MAAM,QAAQC,KAAK,WAC/B,SAACF,EAAA,EAAD,CAAYC,MAAM,WAAWC,KAAK,WAAWV,KAAK,cAClD,SAAC,IAAD,2BAIP,EC3BD,EAJiB,WACf,OAAQ,SAACmB,EAAD,GACT,C","sources":["components/Button/Button.jsx","components/InputField/InputField.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport PropTypes from 'prop-types';\n\nexport const Btn = ({ children }) => {\n  return (\n    <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{\n            mt: 3,\n            mb: 2,\n            backgroundColor: ' #b19cd9',\n            color: '#fff',\n            '&:hover': { backgroundColor: ' #9376b0' },\n            '&:focus': { backgroundColor: ' #9376b0' },\n          }}\n        >\n          { children }\n        </Button>\n  );\n};\n\nBtn.propTypes = {\n  children: PropTypes.string.isRequired,  \n};\n","import { TextField } from \"@mui/material\";\nimport PropTypes from 'prop-types';\n\nexport const InputField = ({ label, name, ...props }) => {\n  return (\n    <TextField\n      variant=\"standard\"\n      margin=\"normal\"\n      required\n      fullWidth\n      label={label}\n      name={name}\n      InputLabelProps={{ style: { outline: 'none', color: '#8a2be2' } }}\n      InputProps={{\n        style: {\n          outline: 'none',\n          borderColor: '#8a2be2',\n          '&:hover, &:focus': {\n            borderColor: '#6a0dad',\n          },\n        },\n        ...props, \n      }}\n    />\n  );\n};\n\nInputField.propTypes = {  \n  name: PropTypes.string.isRequired, \n  label: PropTypes.string.isRequired, \n  props: PropTypes.string,\n};","import { Box, Container } from '@mui/material';\nimport { Btn } from 'components/Button/Button';\nimport { InputField } from 'components/InputField/InputField';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const user = {\n      name: form.elements.name.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n\n    dispatch(register(user));\n    form.reset();\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box component=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\n        <InputField label=\"Username\" name=\"name\" />\n        <InputField label=\"Email\" name=\"email\" />\n        <InputField label=\"Password\" name=\"password\" type=\"password\" />\n        <Btn>Register</Btn>\n      </Box>\n    </Container>\n  );\n};\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nconst Register = () => {\n  return (<RegisterForm/>);\n};\n\nexport default Register;"],"names":["Btn","children","type","fullWidth","variant","sx","mt","mb","backgroundColor","color","InputField","label","name","props","margin","required","InputLabelProps","style","outline","InputProps","borderColor","RegisterForm","dispatch","useDispatch","Container","maxWidth","Box","component","onSubmit","e","preventDefault","form","currentTarget","user","elements","value","email","password","register","reset","autoComplete"],"sourceRoot":""}